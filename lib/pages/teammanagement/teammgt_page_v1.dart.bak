import 'package:fometic/components/setara_form_card_v2.dart';
import 'package:fometic/components/setara_form_text_input.dart';
import 'package:fometic/controllers/teammgt_controller.dart';
import 'package:fometic/pages/login/splash_page.dart';
import 'package:fometic/utils/strutils/constants.dart';
import 'package:get/get.dart';
import 'package:fometic/components/profile_card.dart';
import 'package:fometic/components/search_field.dart';
import 'package:fometic/controllers/main_page_controller.dart';
import 'package:fometic/pages/sections/home/home_section.dart';
import 'package:fometic/utils/responsive/responsive.dart';
import 'package:fometic/utils/strutils/string_constant.dart';
import 'package:flutter/material.dart';

import 'package:fometic/components/side_menu.dart';
import 'package:simple_logger/simple_logger.dart';

final logger = SimpleLogger();

class TeammgtPage extends StatelessWidget {
  final String pageTitle = "Fometic Indonesia";
  final Widget initialContentWidget = HomeSection();
  TeammgtPage({Key? key}) : super(key: key);
  final controller = TeammgtController();
//  MainPage({Key? key, required this.pageTitle, required this.initialContentWidget}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    var mainPageController = Get.find<MainPageController>();
    return Scaffold(
        key: controller.appController.scaffoldKey,
        //resizeToAvoidBottomInset: true,
        appBar: AppBar(
          toolbarHeight: 40,
          leading: const SizedBox(
            width: 10,
          ),
          title: TextButton(
            onPressed: () {
              Get.to(() => SplashPage());
            },
            child: Text(pageTitle),
          ),
          actions: <Widget>[
            const SearchField(),
            Container(
              child: mainPageController.isUserLoggedIn
                  ? ProfileCard(
                      logOutPressed: () {
                        mainPageController.userLoggedOut();
                        logger.info("User Sign Out");
                      },
                    )
                  : TextButton(
                      child: const Text(SignInText),
                      onPressed: () {
                        mainPageController.userLoggedIn();
                        logger.info("User Sign In");
                      },
                    ),
            )
          ],
        ),
        drawer: Responsive.isDesktop(context)
            ? null
            : SideMenu(onClickMenu: mainPageController.onClickMenu),
        body: SafeArea(child: LayoutBuilder(builder: (context, constraints) {
          return Stack(
            children: [
              SetaraFormCard(
                  key: GlobalKey<FormState>(),
                  constraints: constraints,
                  formTitle: "Team Management",
                  children: [
                    SetaraFormTextInput(
                      key: UniqueKey(),
                      columnFactor: 1,
                      // fill all row (out of maximum 3 or 4 field per row)
                      controller: controller.emailTxCtr,
                      style: Theme.of(context).textTheme.bodyText1,
                      labelText: "Email",
                      hintText: "Email Anda",
                      // The validator receives the text that the user has entered.

                    ),
                    SetaraFormTextInput(
                      key: UniqueKey(),
                      columnFactor: 1,
                      // fill all row (out of maximum 3 or 4 field per row)
                      controller: controller.usernameTxCtr,
                      style: Theme.of(context).textTheme.bodyText1,
                      labelText: "Username",
                      hintText: "Username Anda",
                      // The validator receives the text that the user has entered.

                    ),
                    SetaraFormTextInput(
                      key: UniqueKey(),
                      columnFactor: 1,
                      // fill all row (out of maximum 3 or 4 field per row)
                      controller: controller.passwordTxCtr,
                      style: Theme.of(context).textTheme.bodyText1,
                      labelText: "Password",
                      hintText: "Password Anda",
                      // The validator receives the text that the user has entered.

                    ),
                  ]),
              // We want this side menu only for large screen
              if (Responsive.isDesktop(context))
                SizedBox(
                  width: MediaQuery.of(context).size.width / 6,
                  // and it takes 1/6 part of the screen
                  child: SideMenu(onClickMenu: mainPageController.onClickMenu),
                ),
            ],
          );
        })),
        floatingActionButton: Responsive.isDesktop(context)
            ? null
            : FloatingActionButton.small(
                child: const Icon(Icons.menu),
                onPressed: mainPageController.controlMenu));
  }
}
